name: Build & Upload Prebuild

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install napi cli
        run: npm install --global @napi-rs/cli

      - name: Build and prebuild
        run: npm run prebuild

      - name: Get package version
        id: pkg
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Create GitHub Release (if not exists)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=rustite@${{ steps.pkg.outputs.version }}
          if ! gh release view "$TAG_NAME" &>/dev/null; then
            gh release create "$TAG_NAME" --title "rustite $TAG_NAME" --notes "Automated release"
          else
            echo "Release $TAG_NAME already exists"
          fi

      - name: Run napi prepublish (upload prebuild to GitHub Release)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          napi prepublish --gh-release-name "rustite@${{ steps.pkg.outputs.version }}"
